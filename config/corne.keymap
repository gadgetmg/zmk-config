/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk {
    quick-release;
    release-after-ms = <200>;
};

&mt {
    require-prior-idle-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            timeout-ms = <25>;
            layers = <0 2 3 1>;
        };

        backspace {
            bindings = <&kp BSPC>;
            key-positions = <8 9>;
            timeout-ms = <25>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <26 27>;
            timeout-ms = <25>;
            layers = <0 1 2 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
            timeout-ms = <25>;
        };

        function {
            bindings = <&sl 3>;
            key-positions = <37 40>;
            layers = <0>;
        };

        game {
            bindings = <&tog 4>;
            key-positions = <31 32 33 34>;
            layers = <0 4>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <38 39>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R        &kp T        &kp Y      &kp U        &kp I        &kp O       &kp P          &none
&none  &mt LCMD A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G        &kp H      &mt RSHFT J  &mt RCTRL K  &mt LALT L  &mt RGUI SEMI  &none
&none  &kp Z       &kp X       &kp C        &kp V        &kp B        &kp N      &kp M        &kp COMMA    &kp DOT     &kp FSLH       &none
                               &none        &sl 1        &sk LSHFT    &kp SPACE  &sl 2        &none
            >;
        };

        number {
            bindings = <
&none  &none  &kp TILDE  &kp CARET   &kp UNDER    &none           &none   &kp N7  &kp N8  &kp N9  &kp PIPE         &none
&none  &none  &kp PLUS   &kp MINUS   &kp EQUAL    &kp ASTERISK    &none   &kp N4  &kp N5  &kp N6  &kp DQT          &none
&none  &none  &kp HASH   &kp DOLLAR  &kp PERCENT  &none           &none   &kp N1  &kp N2  &kp N3  &kp EXCLAMATION  &none
                         &trans      &trans       &trans          &trans  &trans  &kp N0
            >;
        };

        symbol {
            bindings = <
&none  &none  &kp GRAVE      &kp LBRC  &kp RBRC  &none     &none     &none      &none      &kp DELETE  &kp BSLH  &none
&none  &none  &kp AT         &kp LPAR  &kp RPAR  &none     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT   &kp SQT   &none
&none  &none  &kp AMPERSAND  &kp LBKT  &kp RBKT  &none     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END     &none     &none
                             &none     &trans    &trans    &trans    &trans     &trans
            >;
        };

        function {
            bindings = <
&none  &bootloader   &none           &none         &kp PRINTSCREEN  &none           &kp F10  &kp F7  &kp F8  &kp F9  &bootloader  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &kp F11  &kp F4  &kp F5  &kp F6  &none        &none
&none  &none         &bt BT_CLR_ALL  &bt BT_CLR    &none            &none           &kp F12  &kp F1  &kp F2  &kp F3  &none        &none
                                     &trans        &trans           &trans          &trans   &trans  &trans
            >;
        };

        game_base {
            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R     &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D  &kp F     &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C  &kp V     &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &mo 5  &kp LALT  &kp SPACE    &kp RSHFT  &none  &none
            >;
        };

        game_number {
            bindings = <
&none  &kp F1   &kp F2   &kp F3   &kp F4       &kp F5         &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &kp N1   &kp N2   &kp N3   &kp N4       &kp N5         &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &none
&none  &kp F11  &kp F12  &kp ESC  &kp LS(TAB)  &kp RS(F12)    &none   &none   &none   &none   &none    &none
                         &trans   &none        &none          &none   &none   &none
            >;
        };
    };
};
