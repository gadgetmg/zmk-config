/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SEMICOLON>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        backspace {
            bindings = <&kp BSPC>;
            key-positions = <8 9>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <26 27>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
            timeout-ms = <30>;
            layers = <0 1 2>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <15 14>;
            timeout-ms = <10>;
            layers = <0 1 2>;
        };

        quote {
            bindings = <&kp SQT>;
            key-positions = <21 20>;
            timeout-ms = <10>;
            layers = <0 1 2>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <38 39>;
            timeout-ms = <10>;
        };
    };

    behaviors {
        on: on {
            compatible = "zmk,behavior-toggle-layer";
            label = "ON";
            #binding-cells = <1>;
        };

        off: off {
            compatible = "zmk,behavior-toggle-layer";
            label = "OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    macros {
        kmo: ml {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "ML";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y        &kp U  &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D      &kp F  &kp G        &kp H        &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LCTRL  &mo 1  &kp LSHFT    &lt 3 SPACE  &mo 2  &kp LGUI
            >;
        };

        num {
            bindings = <
&trans  &trans       &trans       &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt LGUI N6  &mt LALT N4  &mt LCTRL N0  &mt LSHFT N2  &trans    &trans  &kp N3  &kp N1  &kp N5  &kp N7  &trans
&trans  &trans       &trans       &trans        &kp N8        &trans    &trans  &kp N9  &trans  &trans  &trans  &trans
                                  &trans        &trans        &trans    &trans  &mo 4   &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans    &kp TILDE  &kp CARET   &kp UNDER    &trans          &trans     &kp BSLH      &kp LBRC        &kp RBRC       &trans         &trans
&trans  &kp PIPE  &kp PLUS   &kp MINUS   &kp EQUAL    &kp ASTERISK    &kp GRAVE  &mt RSHFT AT  &mt RCTRL LPAR  &mt LALT RPAR  &mt RGUI EXCL  &trans
&trans  &trans    &kp HASH   &kp DOLLAR  &kp PERCENT  &trans          &trans     &kp AMPS      &kp LBKT        &kp RBKT       &trans         &trans
                             &trans      &mo 4        &trans          &trans     &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &none   &kp DEL    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        function {
            bindings = <
&none  &none        &bt BT_SEL 4     &bt BT_SEL 0     &bt BT_SEL 2  &none         &none       &bt BT_SEL 3  &bt BT_SEL 1  &bt BT_CLR  &bt BT_CLR_ALL  &none
&none  &kp F6       &kp F4           &kp F10          &kp F2        &kp F12       &kp F11     &kp F3        &kp F1        &kp F5      &kp F7          &none
&none  &bootloader  &kp PAUSE_BREAK  &kp PRINTSCREEN  &kp F8        &sys_reset    &sys_reset  &kp F9        &kp INSERT    &none       &bootloader     &none
                                     &trans           &trans        &trans        &trans      &trans        &trans
            >;
        };

        wasd_base {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W  &kp E     &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A  &kp S  &kp D     &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                          &mo 6  &kp LALT  &kp SPACE    &trans  &trans  &trans
            >;
        };

        wasd_alt {
            bindings = <
&trans  &kp ESC    &kp N7  &kp N8  &kp N9  &kp T    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N4  &kp N5  &kp N6  &kp G    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp B    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &none   &none    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
